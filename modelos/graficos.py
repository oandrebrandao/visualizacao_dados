# -*- coding: utf-8 -*-
"""Graficos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13O8kwHaL_AQsaz2zijrFOaZwkivHrhpI
"""

import pandas as pd
import plotly.graph_objects as go
import plotly.express as px


file_path = '/content/output.xlsx'

df = pd.read_excel(file_path)
print(df.columns)
df['Data da Compra'] = pd.to_datetime(df['Data da Compra'])

vendedores = df['Nome do Vendedor'].unique()
print(vendedores)

df['Valor Integral'] = df['Valor da Compra']/(1-(df['Desconto (%)']/100))
df['Valor Desconto'] = df['Valor Integral'] - df['Valor da Compra']
df.head(10)

df['Mes da Compra']=df['Data da Compra'].dt.month

df['Dia da Compra']=df['Data da Compra'].dt.day



bins = [18, 25, 35, 45, 55, 65, float('inf')]
labels = ['18 a 25 Anos', '26 a 35 Anos', '36 a 45 Anos', '46 a 55 Anos', '56 a 65 Anos', 'Acima de 65 Anos']
df['Faixa Etária'] = pd.cut(df['Idade do Cliente'], bins=bins, labels=labels, right=True)
df

vendas_dia= df.groupby(['Nome do Vendedor', 'Data da Compra'])[['Quantidade de Peças', 'Valor da Compra']].sum().sort_values('Data da Compra')

df1 = df.groupby('Nome do Vendedor')['Valor da Compra'].sum().reset_index()
df1

fig1=go.Figure(go.Bar(
                x=df1['Valor da Compra'],
                y=df1['Nome do Vendedor'],
                orientation='h',
                textposition='auto',
                text=df1['Valor da Compra'],
                insidetextfont=dict(family='Times', size=12)))
fig1.show()

df2 = df.groupby('Dia da Compra')['Quantidade de Peças'].sum().reset_index()
df2

fig2= go.Figure(go.Scatter(
    x=df2['Dia da Compra'],
    y=df2['Quantidade de Peças'], mode='lines', fill='tonexty'))

fig2.add_annotation(text='Quantidade de Peças Vendidas',
                    xref= 'paper', yref='paper',
                    font=dict(size=20, color='gray'), align='center',
                    bgcolor='rgba(0,0,0,0.8)',
                    x=0.05, y=0.85, showarrow=False)
fig2.add_annotation(text=f"Média : {round(df2['Quantidade de Peças'].mean(), 2)}",
        xref="paper", yref="paper",
        font=dict(
            size=30,
            color='gray'
            ),
        align="center", bgcolor="rgba(0,0,0,0.8)",
        x=0.05, y=0.55, showarrow=False)

df2_mes= df.groupby('Mes da Compra')['Quantidade de Peças'].sum().reset_index()
df2_mes

fig13 = go.Figure(go.Scatter(
    x=df2_mes['Mes da Compra'], y=df2_mes['Quantidade de Peças'], mode='lines', fill='tonexty'))

fig13.add_annotation(text='Média de Peças por Mês',
        xref="paper", yref="paper",
        font=dict(
            size=20,
            color='gray'
            ),
        align="center", bgcolor="rgba(0,0,0,0.8)",
        x=0.05, y=0.85, showarrow=False)
fig13.add_annotation(text=f"Média : {round(df2_mes['Quantidade de Peças'].mean(), 2)}",
        xref="paper", yref="paper",
        font=dict(
            size=30,
            color='gray'
            ),
        align="center", bgcolor="rgba(0,0,0,0.8)",
        x=0.05, y=0.55, showarrow=False)

df3= df.groupby(['Nome do Vendedor'])['Valor da Compra'].sum().reset_index()
df3

fig3= go.Figure()
fig3.add_trace(go.Pie(labels=df3['Nome do Vendedor'], values=df3['Valor da Compra'],hole=.7))



df4= df.groupby(['Nome do Vendedor', 'Mes da Compra'])['Valor da Compra'].sum().reset_index()
df4_group= df.groupby('Mes da Compra')['Valor da Compra'].sum().reset_index()

fig4=px.line(df4, x='Mes da Compra', y='Valor da Compra', color='Nome do Vendedor')
fig4.add_trace(go.Scatter(x=df4_group['Mes da Compra'],y=df4_group['Valor da Compra'],mode='lines', fill='tonexty',name='Total de Vendas'))
fig4.show()

df5=df.groupby(['Faixa Etária'])['Quantidade de Peças'].mean().reset_index()

fig5= go.Figure()
fig5.add_trace(go.Pie(labels=df5['Faixa Etária'], values=df5['Quantidade de Peças'],hole=.7))

df6=df.groupby('Faixa Etária')['Valor da Compra'].mean().reset_index()

fig6=go.Figure(go.Bar(
                x=df6['Faixa Etária'],
                y=df6['Valor da Compra'],
                textposition='auto',
                text=df1['Valor da Compra'],
                insidetextfont=dict(family='Times', size=12)))
fig6.show()

df7= df.groupby('Mes da Compra')[['Valor da Compra','Valor Integral']].sum().reset_index()

fig7 = go.Figure()
fig7.add_trace(go.Bar(x=df7['Mes da Compra'], y=df7['Valor da Compra'], name='Valor da Compra'))
fig7.add_trace(go.Bar(x=df7['Mes da Compra'], y=df7['Valor Integral'], name='Valor Integral'))
fig7.show()

df8= df.groupby('Nome do Vendedor')['Valor da Compra'].sum()
df8.sort_values(ascending=False, inplace=True)
df8=df8.reset_index()

fig8=go.Figure()
fig8.add_trace(go.Indicator(mode='number+delta',
        title = {"text": f"<span style='font-size:150%'>{df8['Nome do Vendedor'].iloc[0]} - Top Consultant</span><br><span style='font-size:70%'>Em vendas - em relação a média</span><br>"},
        value = df8['Valor da Compra'].iloc[0],
        number = {'prefix': "R$"},
        delta = {'relative': True, 'valueformat': '.1%', 'reference': df8['Valor da Compra'].mean()}
))

fig9 = go.Figure()
fig9.add_trace(go.Indicator(mode='number',
        title = {"text": f"<span style='font-size:150%'>Valor Total</span><br><span style='font-size:70%'>Em Reais</span><br>"},
        value = df['Valor da Compra'].sum(),
        number = {'prefix': "R$"}
))

fig10 = go.Figure()
fig10.add_trace(go.Indicator(mode='number',
        title = {"text": f"<span style='font-size:150%'>Total de Vendas</span>"},
        value = len(df['Quantidade de Peças'])
))

fig11 = go.Figure()

fig11.add_trace(go.Indicator(
    mode='number',
    title={
        "text": "<span style='font-size:150%'>Ticket Médio</span><br><span style='font-size:70%'>Em Reais</span><br>"
    },
    value=(df['Valor da Compra'].sum()) / len(df['Quantidade de Peças']),
    number={'prefix': "R$"}
))

fig11.show()

fig12 = go.Figure()

fig12.add_trace(go.Indicator(
    mode='number',
    title={
        "text": "<span style='font-size:150%'>Peças por Venda</span><br><span style='font-size:70%'>Média</span><br>"
    },
    value=(df['Quantidade de Peças'].sum()) / len(df['Quantidade de Peças'])
))

fig12.show()

